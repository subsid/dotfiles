--langdef=scala
--langmap=scala:.scala
--kinddef-scala=c,class,Classes
--kinddef-scala=o,object,Objects
--kinddef-scala=C,caseClass,Case\ classes
--kinddef-scala=O,caseObject,Case\ objects
--kinddef-scala=t,trait,Traits
--kinddef-scala=m,method,Methods
--kinddef-scala=l,constant,Constants
--kinddef-scala=v,variable,Variables
--kinddef-scala=T,type,Types
--kinddef-scala=p,package,Packages
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private|protected)?[[:space:]]*class[[:space:]]+([a-zA-Z0-9_]+)/\4/c/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private|protected)?[[:space:]]*object[[:space:]]+([a-zA-Z0-9_]+)/\4/o/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private|protected)?[[:space:]]*case class[[:space:]]+([a-zA-Z0-9_]+)/\4/C/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*(private|protected)?[[:space:]]*case object[[:space:]]+([a-zA-Z0-9_]+)/\4/O/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*""(private|protected)?[[:space:]]*trait[[:space:]]+([a-zA-Z0-9_]+)/\4/t/
--regex-scala=/^[[:space:]]*type[[:space:]]+([a-zA-Z0-9_]+)/\1/T/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy|private|protected)[[:space:]]*)*def[[:space:]]+([a-zA-Z0-9_]+)/\3/m/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*val[[:space:]]+([a-zA-Z0-9_]+)/\3/l/
--regex-scala=/^[[:space:]]*((abstract|final|sealed|implicit|lazy)[[:space:]]*)*var[[:space:]]+([a-zA-Z0-9_]+)/\3/v/
--regex-scala=/^[[:space:]]*package[[:space:]]+([a-zA-Z0-9_.]+)/\1/p/
