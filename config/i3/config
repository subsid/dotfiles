# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#
# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# set modifier
# Window key
set $super Mod4
 # Alt key
set $alt Mod1
set $home /home/ssubramaniyam

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: Noto Sans 13

# Use Mouse+$super to drag floating windows to their wanted position
floating_modifier $super

# start a terminal
# bindsym $super+Return exec 'TERMINAL=alacritty i3-sensible-terminal'
bindsym $super+Return exec $home/.cargo/bin/alacritty

# alacritty --working-directory="$(pwd)"

# Wifi
exec --no-startup-id nm-applet

# kill focused window
bindsym $super+Shift+q kill

# start dmenu (a program launcher)
# bindsym $super+Shift+d exec i3-dmenu-desktop --dmenu="dmenu -i -fn 'Noto Sans:size=8'"

# bindsym $super+Shift+d exec dmenu_run
# Rofi launcher
# bindsym $super+d exec rofi -lines 12 -padding 18 -width 60 -location 0 -show drun -sidebar-mode -columns 3 -font 'Noto Sans 8'

bindsym $super+Shift+d exec i3-dmenu-desktop --dmenu="dmenu -i -fn 'Noto Sans:size=13'"

# Screenshots
# scrot & gimp - root
# screeshot and open with gimp
# bindsym Print --release exec scrot -e 'mv $f ~/screenshot/ && gimp ~/screenshot/$f'
# bindsym $super+Print --release exec scrot -s -e 'mv $f ~/screenshot/ && gimp ~/screenshot/$f'
# Just screenshot
bindsym Print --release exec scrot -u -e 'mv $f ~/screenshot/'
bindsym $super+Print --release exec scrot -f -s -e 'mv $f ~/screenshot/'

# bindsym $super+Shift+d exec dmenu_run
# Rofi launcher
bindsym $super+space exec $home/.scripts/rofi-bangs.sh
bindsym $super+d exec rofi -show drun # Config saved in ~/.config/rofi/config

# change focus
bindsym $super+h focus left
bindsym $super+j focus down
bindsym $super+k focus up
bindsym $super+l focus right

# alternatively, you can use the cursor keys:
bindsym $super+Left focus left
bindsym $super+Down focus down
bindsym $super+Up focus up
bindsym $super+Right focus right

# move focused window
bindsym $super+Shift+h move left
bindsym $super+Shift+j move down
bindsym $super+Shift+k move up
bindsym $super+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $super+Shift+Left move left
bindsym $super+Shift+Down move down
bindsym $super+Shift+Up move up
bindsym $super+Shift+Right move right

# split in horizontal orientation
bindsym $super+o split h

# split in vertical orientation
bindsym $super+v split v

# enter fullscreen mode for the focused container
bindsym $super+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $super+s layout stacking
bindsym $super+w layout tabbed
bindsym $super+e layout toggle split

# toggle tiling / floating
bindsym $super+Shift+space floating toggle

# focus the parent container
bindsym $super+a focus parent

# focus the child container
bindsym $super+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Code"
set $ws2 "2: Browser"
set $ws3 "3: Emacs"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8: Anki"
set $ws9 "9: Slack"
set $ws10 "10: RSS"

# switch to workspace
bindsym $super+1 workspace $ws1
bindsym $super+2 workspace $ws2
bindsym $super+3 workspace $ws3
bindsym $super+4 workspace $ws4
bindsym $super+5 workspace $ws5
bindsym $super+6 workspace $ws6
bindsym $super+7 workspace $ws7
bindsym $super+8 workspace $ws8
bindsym $super+9 workspace $ws9
bindsym $super+0 workspace $ws10

# move focused container to workspace
bindsym $super+Shift+1 move container to workspace $ws1
bindsym $super+Shift+2 move container to workspace $ws2
bindsym $super+Shift+3 move container to workspace $ws3
bindsym $super+Shift+4 move container to workspace $ws4
bindsym $super+Shift+5 move container to workspace $ws5
bindsym $super+Shift+6 move container to workspace $ws6
bindsym $super+Shift+7 move container to workspace $ws7
bindsym $super+Shift+8 move container to workspace $ws8
bindsym $super+Shift+9 move container to workspace $ws9
bindsym $super+Shift+0 move container to workspace $ws10

# Move workspace to screen left/right
bindsym $super+$alt+l move workspace to output right
bindsym $super+$alt+h move workspace to output right
bindsym $super+$alt+k move workspace to output up
bindsym $super+$alt+j move workspace to output down

# reload the configuration file
bindsym $super+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $super+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $super+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $super+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $super+r mode "default"
}

bindsym $super+r mode "resize"

bindsym $super+Shift+x exec i3lock -t -i ~/.lock.png

# autostart
exec --no-startup-id xsettingsd &
exec --no-startup-id picom -b
exec --no-startup-id xrandr --output eDP-1-1 --mode 1920x1080
exec --no-startup-id /usr/bin/dropbox start &
exec --no-startup-id feh --bg-scale ~/.wallpaper.png
exec --no-startup-id greenclip daemon>/dev/null &
exec --no-startup-id $home/.scripts/battery_notify &
exec --no-startup-id $home/.local/bin/anki &

exec_always --no-startup-id ~/.scripts/setupmonitor
exec_always --no-startup-id ~/.scripts/tap_enable

# Swap left control-capslock, alt-super globally
exec_always setxkbmap -option "ctrl:swapcaps" -option "altwin:swap_lalt_lwin"

# For office keyboard, don't swap alt and super.
exec_always xinput list | awk -F "\t" '$1 ~ /Macally.+KEYBOARD$/ && $3 ~ /slave.+keyboard/ {print $2}' | awk -F "=" '{print "setxkbmap -device " $2 " -option;" "setxkbmap " "-device " $2 " -option ctrl:swapcaps"}' | bash

# panel
bar {
        colors {
        background #2f343f
        statusline #2f343f
        separator #4b5262

        # colour of border, background, and text
        focused_workspace       #2f343f #bf616a #d8dee8
        active_workspace        #2f343f #2f343f #d8dee8
        inactive_workspace      #2f343f #2f343f #d8dee8
        urgent_workspace       #2f343f #ebcb8b #2f343f
        }

        # status_command /home/sid/.scripts/i3-status.sh
        # status_command i3status
        status_command py3status
}

# colour of border, background, text, indicator, and child_border
client.focused              #bf616a #2f343f #d8dee8 #bf616a #d8dee8 client.focused_inactive     #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.unfocused            #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.urgent               #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.placeholder          #2f343f #2f343f #d8dee8 #2f343f #2f343f
client.background           #2f343f

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.scripts/pactl_volume.sh +5% # increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.scripts/pactl_volume.sh -5% # decrease sound volume
bindsym XF86AudioMute exec --no-startup-id ~/.scripts/pactl_volume.sh M # mute sound

# Sreen brightness controls
set $brightness_step 5%
bindsym XF86MonBrightnessUp exec brightnessctl set +$brightness_step # increase screen brightness
bindsym XF86MonBrightnessDown exec brightnessctl set $brightness_step- # decrease screen brightness

# Touchpad controls
# bindsym XF86TouchpadToggle exec $home/.config/i3/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Pomodoro timer
# Start/pause
bindsym $alt+F9 exec "py3-cmd click --button 1 pomodoro"
# Reset
bindsym $alt+F10 exec "py3-cmd click --button 2 pomodoro"
# Skip
bindsym $alt+F11 exec "py3-cmd click --button 3 pomodoro"

# exec --no-startup-id "$home/miniconda3/bin/python ~/.scripts/i3-gnome-pomodoro/pomodoro-client.py daemon"
# bindsym $alt+F9 exec "$home/miniconda3/bin/python ~/.scripts/i3-gnome-pomodoro/pomodoro-client.py start"
# bindsym $alt+F10 exec "$home/miniconda3/bin/python ~/.scripts/i3-gnome-pomodoro/pomodoro-client.py toggle"
# bindsym $alt+F11 exec "$home/miniconda3/bin/python ~/.scripts/i3-gnome-pomodoro/pomodoro-client.py skip"
# bindsym $alt+F12 exec "$home/miniconda3/bin/python ~/.scripts/i3-gnome-pomodoro/pomodoro-client.py stop"

## Workspace settings

## Run "xprop | grep WM_CLASS | awk '{ print $4 }'" in shell and click on application for class information
assign [class="Gnome-terminal"] $ws1
assign [class="jetbrains-idea"] $ws1
# assign [class="Google-chrome"] $ws2
assign [class="Emacs"] $ws3
assign [class="Anki"] $ws8
assign [class="Slack"] $ws9
assign [class="discord"] $ws9
assign [class="Com.gitlab.newsflash"] $ws10

